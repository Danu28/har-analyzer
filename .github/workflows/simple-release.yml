name: Simple Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Get version from tag
      id: version
      run: |
        echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    
    - name: Basic validation
      run: |
        echo "Building release for version: ${{ steps.version.outputs.VERSION }}"
        # Test core imports
        cd scripts
        python -c "import break_har_for_single_analysis; print('✓ Core scripts validated')"
        python -c "import analyze_single_har_performance; print('✓ Analysis scripts validated')"
        echo "✓ Release validation passed"
    
    - name: Create release package
      run: |
        # Create release directory
        mkdir -p release/har-analyze-${{ steps.version.outputs.VERSION }}
        
        # Copy essential files
        cp -r scripts/ release/har-analyze-${{ steps.version.outputs.VERSION }}/
        cp -r templates/ release/har-analyze-${{ steps.version.outputs.VERSION }}/
        cp -r static/ release/har-analyze-${{ steps.version.outputs.VERSION }}/
        cp demo_*.py release/har-analyze-${{ steps.version.outputs.VERSION }}/
        cp app.py release/har-analyze-${{ steps.version.outputs.VERSION }}/
        cp requirements.txt release/har-analyze-${{ steps.version.outputs.VERSION }}/
        cp README.md release/har-analyze-${{ steps.version.outputs.VERSION }}/
        cp LICENSE release/har-analyze-${{ steps.version.outputs.VERSION }}/
        cp CHANGELOG.md release/har-analyze-${{ steps.version.outputs.VERSION }}/
        cp start_gui.cmd release/har-analyze-${{ steps.version.outputs.VERSION }}/
        
        # Create directories
        mkdir -p release/har-analyze-${{ steps.version.outputs.VERSION }}/HAR-Files
        mkdir -p release/har-analyze-${{ steps.version.outputs.VERSION }}/har_chunks
        mkdir -p release/har-analyze-${{ steps.version.outputs.VERSION }}/reports
        
        # Create archive
        cd release
        tar -czf har-analyze-${{ steps.version.outputs.VERSION }}.tar.gz har-analyze-${{ steps.version.outputs.VERSION }}/
        zip -r har-analyze-${{ steps.version.outputs.VERSION }}.zip har-analyze-${{ steps.version.outputs.VERSION }}/
    
    - name: Generate release notes
      id: release_notes
      run: |
        echo "RELEASE_NOTES<<EOF" >> $GITHUB_OUTPUT
        echo "## HAR-ANALYZE ${{ steps.version.outputs.TAG }}" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "### Features" >> $GITHUB_OUTPUT
        echo "- Performance analysis for .har files" >> $GITHUB_OUTPUT
        echo "- Interactive HTML reports with charts" >> $GITHUB_OUTPUT
        echo "- Web GUI for easy analysis" >> $GITHUB_OUTPUT
        echo "- Batch processing and comparison tools" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "### Installation" >> $GITHUB_OUTPUT
        echo "1. Download and extract the archive" >> $GITHUB_OUTPUT
        echo "2. Install Python 3.8+ if not already installed" >> $GITHUB_OUTPUT
        echo "3. Install dependencies: \`pip install -r requirements.txt\`" >> $GITHUB_OUTPUT
        echo "4. Run GUI: \`python app.py\` or use \`start_gui.cmd\`" >> $GITHUB_OUTPUT
        echo "5. Or run demos: \`python demo_single_file_report.py\`" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "### System Requirements" >> $GITHUB_OUTPUT
        echo "- Python 3.8 or higher" >> $GITHUB_OUTPUT
        echo "- Windows, macOS, or Linux" >> $GITHUB_OUTPUT
        echo "- Flask and Jinja2 (installed via requirements.txt)" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.TAG }}
        name: HAR-ANALYZE ${{ steps.version.outputs.TAG }}
        body: ${{ steps.release_notes.outputs.RELEASE_NOTES }}
        draft: false
        prerelease: false
        files: |
          ./release/har-analyze-${{ steps.version.outputs.VERSION }}.tar.gz
          ./release/har-analyze-${{ steps.version.outputs.VERSION }}.zip
